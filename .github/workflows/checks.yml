---   # it signifies that its a yml file
name: checks  # user-defined name of the workflow

on: [push]
  # workflow will run on trigger 'push'
  # so, on every push to github, this workflow(checks.yml file only) will run

jobs:
  test-lint:  # job id to uniquely identify the job to run it only in the sequence it is written
    name: Test and Lint
      # just a name to see which job/step is currently executing when workflow is running
      # it will be shown on the github actions console
    run-on: ubuntu-20.04
      # its an 'ubuntu' runner on which the jobs will run
      # so ubuntu 20.04 has docker and docker compose pre installed
      # so we dont need to install it in this runner thru our workflow
    steps:  # these are the things that will run inside the job 'test-lint' in the sequence only
      - name: Login to Docker Hub
        uses: docker/login-action@v1
          # we are using a github pre-made action 'docker/login-action@v1' for logging into docker
          # github pre-made actions provided in github official actions repository
          # since its a docker action so its also available in official docker repository
          # here, we are using version 1 of the action as defined as '@v1'
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Checkout
        uses: actions/checkout@v2
          # its a pre-made github action which can be found in github official actions repository
          # it is use to make the code available and accessible for the workflow to perform later steps on the code
      - name: Test
        run: docker-compose run --rm app sh -c "python manage.py test"
          # this is use to test the whole code (all python files only)
          # above command will run on the code and perform unit testing
      - name: Lint
        run: docker-compose run --rm app sh -c "flake8"
          # we will do linting(checking formatting/typo errs) in all the python files by executing above command

# exit code 0 is signal for successful exit in linux
# so if any of above job/step will return anything other than exit code 0 then it means that job is failed

